
logLevel: "debug"
webServerListenAddress: "0.0.0.0:8080"

pipeline: []

modules:

  tailer:
    tailedFile: "./logs"
    follow: true
    reopen: true
    positionFile: ""
    positionPersistenceInterval: "2s"
    loglineParseRegexp: '^(?P<ip>[A-Fa-f0-9.:]{4,50}) \S+ \S+ \[(?P<time>.*?)\] "(?P<request>.*?)" (?P<statusCode>\d+) \d+ "(?P<referer>.*?)" uag="(?P<userAgent>[^"]+)" "[^"]+" ua="[^"]+" rt="(?P<requestDuration>\d+(\.\d+)??)"'
    emptyGroupRE: '^-$'

  prometheusIngester:
    apiUrl: "https://thanos.sklik-scif-ko.dev.dszn.cz"
    queryTimeout: 10s
    queries:
      - query: 'up{app_label="puzzler"}'
        interval: 3s

  eventFilter:
    filteredHttpStatusCodeMatchers: ["404"]
    filteredHttpHeaderMatchers: {}


  normalizer:
    replaceRules:
      - regexp: "/api/v1/ppchit/rule/[0-9a-fA-F]{5,16}"
        replacement: "/api/v1/ppchit/rule/0"

  dynamicClassifier:
    exactMatchesCsvFiles: []
    regexpMatchesCsvFiles:
      - "./classifications.csv"

  sloEventProducer:
    rulesFiles:
      - "./slo_rules.yaml"

  prometheusExporter:
    metricName: "slo_events_total"
    maximumUniqueEventKeys: 1000
    ExceededKeyLimitPlaceholder: "cardinalityLimitExceeded"
    labelNames:
      result: "result"
      sloDomain: "slo_domain"
      sloClass: "slo_class"
      sloApp: "slo_app"
      eventKey: "event_key"
