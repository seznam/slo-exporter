{{ $slo_domain := (env "SLO_EXPORTER_SLO_DOMAIN" | default "unknown") }}
{{ $upstream_proxy := (env "SLO_EXPORTER_UPSTREAM_PROXY_SHORT_NAME" | default "unknown") }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: slo-exporter-{{ $slo_domain }}-{{ $upstream_proxy }}
  labels:
    app: slo-exporter
    instance: {{ $slo_domain }}-{{ $upstream_proxy }}
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: slo-exporter
      instance: {{ $slo_domain }}-{{ $upstream_proxy }}
  serviceName: slo-exporter-{{ $slo_domain }}-{{ $upstream_proxy }}
  template:
    metadata:
      labels:
        app: slo-exporter
        instance: {{ $slo_domain }}-{{ $upstream_proxy }}
      annotations:
        app: slo-exporter-{{ $slo_domain }}-{{ $upstream_proxy }}
        team: sklik.devops@firma.seznam.cz
        cz.sklik.metrics.scrape: 'true'
        cz.sklik.metrics.port: '8080'
        cz.sklik.metrics.path: /metrics
    spec:
      containers:

      # tail sznlogy logs and store locally
      - name: htail
        image: doc.ker/sklik-devops/htail:1.4.1
        args:
        - -k
        - --follow
        - --sleep-interval=0.1
        - {{ env "HTAIL_URL" | default "https://skweb1.ko.seznam.cz:8888/szn-sklik-userproxy/access_log" }}
        env:
        - name: HTAIL_AUTH_USER
          valueFrom:
            secretKeyRef:
              name: slo-exporter-htail
              key: ldap-username
        - name: HTAIL_AUTH_PASS
          valueFrom:
            secretKeyRef:
              name: slo-exporter-htail
              key: ldap-password
        # custom htail entrypoint log file rotation speed
        - name: HTAIL_EP_LOG_FILE_MAX_SIZE
          value: "200000000"
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - -e
            - find /log -newermt '2 minute ago' -name htail.log | grep htail.log$
          failureThreshold: 5
          timeoutSeconds: 3
        resources:
          requests:
            cpu: "{{ env "HTAIL_KUBERNETES_RESOURCES_REQUESTS_CPU" | default "0.1" }}"
            memory: "{{ env "HTAIL_KUBERNETES_RESOURCES_REQUESTS_MEMORY" | default "128Mi" }}"
          limits:
            cpu: "{{ env "HTAIL_KUBERNETES_RESOURCES_LIMITS_CPU" | default "0.5" }}"
            memory: "{{ env "HTAIL_KUBERNETES_RESOURCES_LIMITS_MEMORY" | default "256Mi" }}"
        volumeMounts:
        - name: skweb-logs
          mountPath: /log
          readOnly: false

      # read logs and compute SLO
      - name: slo-exporter
        image: {{ env "DOCKER_IMAGE" | default "doc.ker/sklik-devops/slo-exporter:latest" }}
        args:
        - --config-file={{ env "SLO_EXPORTER_CONFIG" | default "/slo_exporter/conf/slo_exporter.yaml" }}
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: SLO_EXPORTER_TAILER_TAILEDFILE
          value: "/logs/htail.log"
        {{ if env "KUBERNETES_ENV_CONFIG_MAP" }}
        envFrom:
        - configMapRef:
            name: {{ env "KUBERNETES_ENV_CONFIG_MAP" }}
        {{ end }}
        livenessProbe:
          httpGet:
            port: 8080
            path: /dynamic_classifier/matchers/regexp
        resources:
          requests:
            cpu: "{{ env "SLO_EXPORTER_KUBERNETES_RESOURCES_REQUESTS_CPU" | default "0.5" }}"
            memory: "{{ env "SLO_EXPORTER_KUBERNETES_RESOURCES_REQUESTS_MEMORY" | default "256Mi" }}"
          limits:
            cpu: "{{ env "SLO_EXPORTER_KUBERNETES_RESOURCES_LIMITS_CPU" | default "1.0" }}"
            memory: "{{ env "SLO_EXPORTER_KUBERNETES_RESOURCES_LIMITS_MEMORY" | default "1Gi" }}"
        volumeMounts:
        - name: skweb-logs
          mountPath: /logs
          readOnly: false

      volumes:
      - name: skweb-logs
        emptyDir: {}
